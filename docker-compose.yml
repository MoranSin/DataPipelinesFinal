services:
  youtube-daily-scheduler:
    build:
      context: ./scrapers
      dockerfile: Dockerfile
      args:
        SCHEDULER_MODULE: "scrapers.youtubeScraper.youtubeChartsDaily"
    environment:
      - YOUTUBE_CHARTS_URL_KEY=${YOUTUBE_CHARTS_URL_KEY}
      - YOUTUBE_CHARTS_COOKIE=${YOUTUBE_CHARTS_COOKIE}
      - YOUTUBE_CHARTS_API_KEY=${YOUTUBE_CHARTS_API_KEY}
      - YOUTUBE_TRENDS_COOKIE=${YOUTUBE_TRENDS_COOKIE}
      - YOUTUBE_TRENDS_API_KEY=${YOUTUBE_TRENDS_API_KEY}
    depends_on:
      - sqs


  youtube-weekly-scheduler:
    build:
      context: ./scrapers
      dockerfile: Dockerfile
      args:
        SCHEDULER_MODULE: "scrapers.youtubeScraper.youtubeChartsWeekly"
    environment:
      - YOUTUBE_CHARTS_URL_KEY=${YOUTUBE_CHARTS_URL_KEY}
      - YOUTUBE_CHARTS_COOKIE=${YOUTUBE_CHARTS_COOKIE}
      - YOUTUBE_CHARTS_API_KEY=${YOUTUBE_CHARTS_API_KEY}
    depends_on:
      - sqs

  tiktok-scheduler:
    build:
      context: ./scrapers
      dockerfile: Dockerfile
      args:
        SCHEDULER_MODULE: "scrapers.tiktokBillboardScraper.tiktokScraper"
    depends_on:
      - sqs

  spotify-daily-scheduler:
    build:
      context: ./scrapers
      dockerfile: Dockerfile
      args:
        SCHEDULER_MODULE: "scrapers.spofityScraper.spotifyChartsDaily"
    environment:
      SPOTIFY_API_KEY_DAILY: ${SPOTIFY_API_KEY_DAILY}
    depends_on:
      - sqs

  spotify-weekly-scheduler:
    build:
      context: ./scrapers
      dockerfile: Dockerfile
      args:
        SCHEDULER_MODULE: "scrapers.spofityScraper.spotifyChartsWeekly"
    environment:
      SPOTIFY_API_KEY_DAILY: ${SPOTIFY_API_KEY_WEEKLY}
    depends_on:
      - sqs

  api:
    build:
      context: ./crud-api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://user:password@postgres:5432/music_charts"
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    networks:
      - mynetwork
    volumes:
      - ./serverless.yml:/app/serverless.yml
  
  sqs:
    image: softwaremill/elasticmq:latest
    container_name: sqs
    ports:
      - "9324:9324"
    volumes:
      - ./elasticmq.conf:/opt/elasticmq.conf

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: music_charts
      
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data: