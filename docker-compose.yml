services:
  youtube-daily-scheduler:
    build:
      context: ./scrapers 
      dockerfile: Dockerfile
      args:
        SCHEDULER_NAME: "youtubeScraper.youtubeChartsDaily"
    environment:
      - SCHEDULER_NAME=scrapers.youtubeScraper.youtubeChartsDaily
      - YOUTUBE_CHARTS_URL_KEY=${YOUTUBE_CHARTS_URL_KEY}
      - YOUTUBE_CHARTS_COOKIE=${YOUTUBE_CHARTS_COOKIE}
      - YOUTUBE_CHARTS_API_KEY=${YOUTUBE_CHARTS_API_KEY}
      - YOUTUBE_TRENDS_COOKIE=${YOUTUBE_TRENDS_COOKIE}
      - YOUTUBE_TRENDS_API_KEY=${YOUTUBE_TRENDS_API_KEY}
    command: ["python", "-m", "youtubeScraper.youtubeChartsWeekly"]

  youtube-weekly-scheduler:
    build:
      context: ./scrapers 
      dockerfile: Dockerfile
      args:
        SCHEDULER_NAME: "youtubeScraper.youtubeChartsWeekly"
    environment:
      - SCHEDULER_NAME=scrapers.youtubeScraper.youtubeChartsWeekly
      - YOUTUBE_CHARTS_URL_KEY=${YOUTUBE_CHARTS_URL_KEY}
      - YOUTUBE_CHARTS_COOKIE=${YOUTUBE_CHARTS_COOKIE}
      - YOUTUBE_CHARTS_API_KEY=${YOUTUBE_CHARTS_API_KEY}
    command: ["python", "-m", "youtubeScraper.youtubeChartsWeekly"]

# tiktok-billboard-scheduler:
  #   build:
  #     context: .
  #     args:
  #       SCHEDULER_NAME: "scrapers.tiktokBillboardScraper.tiktokScraper"
  #   environment:
  #     - SCHEDULER_NAME=scrapers.tiktokBillboardScraper.tiktokScraper
  #   command: [python", "-m", "scrapers/tiktokBillboardScraper/tiktokScraper"]

  # spotify-scheduler:
  #   build:
  #     context: .
  #     args:
  #       SCHEDULER_NAME: "scrapers.spotifyScraper.spotify_handler"
  #   environment:
  #     - SCHEDULER_NAME=scrapers.spotifyScraper.spotify_handler
  #     - SPOTIFY_API_KEY=${SPOTIFY_API_KEY}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #   command: [python", "-m", "scrapers/spotifyScraper.spotify_handler"]


  api:
    build:
      context: ./crud-api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://user:password@postgres:5432/music_charts"
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    networks:
      - mynetwork
  
  sqs:
    image: softwaremill/elasticmq:latest
    container_name: sqs
    ports:
      - "9324:9324"
    volumes:
      - ./elasticmq.conf:/opt/elasticmq.conf

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: music_charts
      
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data: