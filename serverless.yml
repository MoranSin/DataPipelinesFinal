# service: skibidi-pipeline

# provider:
#   name: aws
#   runtime: python3.9
#   region: us-east-1  

# # functions:
# #   tiktokBillboardScraper:
# #     handler: /scrapers/tiktokBillboardScrapr/tiktokScraper.tiktok_handler
# #     timeout: 300
# #     events:
# #       - schedule:
# #           rate: rate(1 minute)
# #           enabled: true
      
#   # spotifyScraper:
#   #   handler: scrapers/spotifyScraper.spotify_handler
#   #   environment:
#   #     SPOTIFY_API_KEY: ${env:SPOTIFY_API_KEY}
#   #     AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
#   #     AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
#   #   events:
#   #     - schedule:
#   #         rate: rate(7 days)
#   #         enabled: true
#   #     - http:
#   #         path: /spotify-scraper
#   #         method: get

#   # youtubeScraperDaily:
#   #   handler: scrapers/youtubeScraper.youtubeChartsDaily
#   #   events:
#   #     - schedule:
#   #         rate: rate(7 days)
#   #         enabled: true

#   # youtubeScraperWeekly:
#   #   handler: scrapers/youtubeScraper.youtubeChartsWeekly
#   #   events:
#   #     - schedule:
#   #         rate: rate(1 day)
#   #         enabled: true


#   # process:
#     # handler: handler.process
#     # events:
#     #   - sqs:
#     #       arn:
#     #         Fn::GetAtt:
#     #           - DataRawQueue
#     #           - Arn

# plugins:
#   - serverless-python-requirements
#   - serverless-offline-sqs
#   - serverless-offline
#   - serverless-dotenv-plugin


# resources:
#   Resources:
#     DataRawQueue:
#       Type: AWS::SQS::Queue
#       Properties:
#         QueueName: data-music-q

# custom:
#   serverless-offline-sqs:
#     autoCreate: true
#     apiVersion: '2012-11-05'
#     endpoint: http://sqs:9324
#     accessKeyId: x
#     secretAccessKey: x
#     queues:
#       - QueueName: data-music-q
#   serverless-offline:
#     port: 8001    


